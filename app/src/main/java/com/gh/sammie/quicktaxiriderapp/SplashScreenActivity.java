package com.gh.sammie.quicktaxiriderapp;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import com.firebase.ui.auth.AuthMethodPickerLayout;
import com.firebase.ui.auth.AuthUI;
import com.firebase.ui.auth.IdpResponse;
import com.gh.sammie.quicktaxiriderapp.model.RiderModel;
import com.gh.sammie.quicktaxiriderapp.utils.UserUtils;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.material.textfield.TextInputEditText;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.iid.FirebaseInstanceId;

import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeUnit;

import butterknife.BindView;
import butterknife.ButterKnife;
import io.reactivex.Completable;
import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.functions.Action;


//        progress_bar.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View view) {
//                new RaveUiManager(SplashScreenActivity.this).setAmount(3)
//                        .setCurrency("GHS")
//                        .setEmail("evansdrah@gmail.com")
//                        .setfName("Evans")
//                        .setlName("Luh")
//                        .setNarration("narration")
//                        .setPublicKey("FLWPUBK-09d3d6647d2937eda6ce7ef458d76313-X")
//                        .setEncryptionKey("d77ca225d32901d6b5e3ebdb")
//                        .setTxRef("5050") //This is the unique reference, unique to the particular transaction being carried out. It is generated by the merchant for every transaction
//                        .setPhoneNumber("0544184738", true)
//                    .acceptAccountPayments( true)
//                    .acceptCardPayments( true)
//                    .acceptMpesaPayments( false)
//                    .acceptAchPayments( false)
//                    .acceptGHMobileMoneyPayments( true)
//                    .acceptUgMobileMoneyPayments( false)
//                    .acceptZmMobileMoneyPayments( false)
//                    .acceptRwfMobileMoneyPayments( false)
//                    .acceptSaBankPayments( true)
//                    .acceptUkPayments( true)
//                    .acceptBankTransferPayments( true)
//                    .acceptUssdPayments( true)
//                    .acceptBarterPayments( true)
//                    .acceptFrancMobileMoneyPayments( true)
//                    .allowSaveCardFeature( false)
//                    .onStagingEnv( false)
//                        .shouldDisplayFee(true)
//                    .showStagingLabel( true)
//                    .initialize();
//            }
//        });
//    }
//
//    @Override
//    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
//        /*
//         *  We advise you to do a further verification of transaction's details on your server to be
//         *  sure everything checks out before providing service or goods.
//         */
//        if (requestCode == RaveConstants.RAVE_REQUEST_CODE && data != null) {
//            String message = data.getStringExtra("response");
//            if (resultCode == RavePayActivity.RESULT_SUCCESS) {
//                Toast.makeText(this, "SUCCESS " + message, Toast.LENGTH_SHORT).show();
//            }
//            else if (resultCode == RavePayActivity.RESULT_ERROR) {
//                Toast.makeText(this, "ERROR " + message, Toast.LENGTH_SHORT).show();
//            }
//            else if (resultCode == RavePayActivity.RESULT_CANCELLED) {
//                Toast.makeText(this, "CANCELLED " + message, Toast.LENGTH_SHORT).show();
//            }
//        }
//        else {
//            super.onActivityResult(requestCode, resultCode, data);
//        }
//    }
public class SplashScreenActivity extends AppCompatActivity {

    private final static int LOGIN_REQUEST_CODE = 7171;
    private List<AuthUI.IdpConfig> providers;
    private FirebaseAuth firebaseAuth;
    private FirebaseAuth.AuthStateListener listener;

    @BindView(R.id.progress_bar)
    ProgressBar progress_bar;

    private FirebaseDatabase database;
    private DatabaseReference riderInfoRef;

    @Override
    protected void onStart() {
        super.onStart();
        delaySplashScreen();
    }

    @SuppressLint("CheckResult")
    private void delaySplashScreen() {
        progress_bar.setVisibility(View.VISIBLE);
        Completable.timer(3, TimeUnit.SECONDS,
                AndroidSchedulers.mainThread())
                .subscribe(new Action() {
                    @Override
                    public void run() throws Exception {
                        //After show splash check again if login
                        firebaseAuth.addAuthStateListener(listener);
                    }
                });
    }


    @Override
    protected void onStop() {
        if (firebaseAuth != null && listener != null)
            firebaseAuth.removeAuthStateListener(listener);
        super.onStop();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash_screen);

        init();

//

    }

    private void init() {

        ButterKnife.bind(this);

        database = FirebaseDatabase.getInstance();
        riderInfoRef = database.getReference(Common.RIDER_INFO_REF);

        providers = Arrays.asList(
                new AuthUI.IdpConfig.PhoneBuilder().build(),
                new AuthUI.IdpConfig.GoogleBuilder().build()
        );

        firebaseAuth = FirebaseAuth.getInstance();
        listener = myFirebaseAuth -> {
            FirebaseUser user = myFirebaseAuth.getCurrentUser();
            if (user != null) {

                //update token
                FirebaseInstanceId.getInstance()
                        .getInstanceId()
                        .addOnFailureListener(new OnFailureListener() {
                            @Override
                            public void onFailure(@NonNull Exception e) {
                                Toast.makeText(SplashScreenActivity.this, "" + e.getMessage(), Toast.LENGTH_SHORT).show();
                            }
                        }).addOnSuccessListener(instanceIdResult -> {
                            Log.d("TOKEN", instanceIdResult.getToken());
                            UserUtils.updateToken(SplashScreenActivity.this, instanceIdResult.getToken());
                        });
                checkUserFromFirebase();

            } else
                showLoginLayout();

        };
    }

    private void showLoginLayout() {
//        finish(); // to prevent crash
        //TODO also remove to prevent alert crash to be fixed

        AuthMethodPickerLayout authMethodPickerLayout = new AuthMethodPickerLayout.Builder(
                R.layout.layout_sign_in)
                .setPhoneButtonId(R.id.btn_phone_sign_in)
                .setGoogleButtonId(R.id.btn_google_sign_in)
                .build();

        startActivityForResult(AuthUI.getInstance()
                .createSignInIntentBuilder()
                .setTheme(R.style.LoginTheme)
                .setAuthMethodPickerLayout(authMethodPickerLayout)
                .setIsSmartLockEnabled(false)
                .setAvailableProviders(providers).build(), LOGIN_REQUEST_CODE);


    }

    private void checkUserFromFirebase() {
        riderInfoRef.child(FirebaseAuth.getInstance().getCurrentUser().getUid()).addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (snapshot.exists()) {
                    RiderModel riderModel = snapshot.getValue(RiderModel.class);
                    gotoHomeActivity(riderModel);
//                     Toast.makeText(SplashScreenActivity.this, "User Already Registered", Toast.LENGTH_SHORT).show();
                } else showRegisterLayout();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Toast.makeText(SplashScreenActivity.this, "" + error.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });

    }

    private void showRegisterLayout() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.DialogTheme);
        View itemView = LayoutInflater.from(this).inflate(R.layout.layout_register, null);

        TextInputEditText edt_first_name = itemView.findViewById(R.id.edt_first_name);
        TextInputEditText edt_last_name = itemView.findViewById(R.id.edt_last_name);
        TextInputEditText edt_phone = itemView.findViewById(R.id.edit_phone_number);
        Button btn = itemView.findViewById(R.id.btn_register);

        //set data
        if (FirebaseAuth.getInstance().getCurrentUser().getPhoneNumber() != null && !TextUtils.isEmpty(FirebaseAuth.getInstance().getCurrentUser().getPhoneNumber()))
            edt_phone.setText(FirebaseAuth.getInstance().getCurrentUser().getPhoneNumber());
        //set view
        builder.setView(itemView);
        AlertDialog dialog = builder.create();
        dialog.show();

        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (TextUtils.isEmpty(edt_first_name.getText().toString())) {
                    Toast.makeText(SplashScreenActivity.this, "please enter first name", Toast.LENGTH_SHORT).show();
                    return;

                } else if (TextUtils.isEmpty(edt_last_name.getText().toString())) {
                    Toast.makeText(SplashScreenActivity.this, "please enter last name", Toast.LENGTH_SHORT).show();
                    return;

                } else if (TextUtils.isEmpty(edt_phone.getText().toString())) {
                    Toast.makeText(SplashScreenActivity.this, "please enter Phone number", Toast.LENGTH_SHORT).show();
                    return;

                } else {
                    RiderModel model = new RiderModel();
                    model.setFirstName(edt_first_name.getText().toString().trim());
                    model.setLastName(edt_last_name.getText().toString().trim());
                    model.setPhoneNumber(edt_phone.getText().toString().trim());


                    riderInfoRef.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
                            .setValue(model)
                            .addOnFailureListener(new OnFailureListener() {
                                @Override
                                public void onFailure(@NonNull Exception e) {
                                    Toast.makeText(SplashScreenActivity.this, "" + e.getMessage(), Toast.LENGTH_SHORT).show();
                                    dialog.dismiss();

                                }
                            })
                            .addOnSuccessListener(new OnSuccessListener<Void>() {
                                @Override
                                public void onSuccess(Void aVoid) {
                                    Toast.makeText(SplashScreenActivity.this, "Registration Done ", Toast.LENGTH_SHORT).show();
                                    dialog.dismiss();
                                    gotoHomeActivity(model);

                                }
                            });

                }


            }
        });

    }

    private void gotoHomeActivity(RiderModel riderModel) {
        Common.currentRider = riderModel; //init value
        startActivity(new Intent(SplashScreenActivity.this, HomeActivity.class));
        finish();
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == LOGIN_REQUEST_CODE) {
            IdpResponse response = IdpResponse.fromResultIntent(data);

            if (resultCode == RESULT_OK) {
                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
            } else {
                Toast.makeText(this, "[ERROR]: " + response.getError().getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
    }

}